cmake_minimum_required(VERSION 2.8.3)
project(vins_estimator)

set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_CXX_FLAGS "-std=c++11")
#-DEIGEN_USE_MKL_ALL")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -Wall -g")


find_package(catkin_simple REQUIRED)
catkin_simple(ALL_DEPS_REQUIRED)

FIND_PACKAGE( OpenMP REQUIRED)
if(OPENMP_FOUND)
    message("OPENMP FOUND")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()


cs_add_library(vins_estimator_lib
        src/depth_estimate.cpp
        src/ros_utils.cc
    src/parameters.cpp
    src/estimator.cpp
    src/feature_manager.cpp
    src/factor/pose_local_parameterization.cpp
    src/factor/projection_factor.cpp
    src/factor/marginalization_factor.cpp
    src/utility/utility.cpp
    src/utility/visualization.cpp
    src/utility/CameraPoseVisualization.cpp
    src/initial/solve_5pts.cpp
    src/initial/initial_aligment.cpp
    src/initial/initial_sfm.cpp
    src/initial/initial_ex_rotation.cpp
    )

add_executable(vins_estimator src/estimator_node.cpp)
target_link_libraries(vins_estimator
        vins_estimator_lib)

include_directories(sample)
add_executable(flame_offline_asl
        sample/main.cc
        sample/ros_sensor_streams/asl_rgbd_offline_stream.h
        sample/ros_sensor_streams/asl_rgbd_offline_stream.cc
        sample/dataset_utils/asl/dataset.h
        sample/dataset_utils/asl/types.h
        sample/dataset_utils/utils.h
        sample/dataset_utils/utils.cc)

target_link_libraries(flame_offline_asl
        vins_estimator_lib)


cs_install()
cs_export()